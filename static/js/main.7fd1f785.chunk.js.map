{"version":3,"sources":["tabs/Tabs.js","yamlEditor/extendModes.js","yamlEditor/YamlEditor.js","ErrorBoundary.js","formBuilder/checkbox/FBCheckbox.js","formBuilder/Collapse/Collapse.js","formBuilder/radio/FBRadioButton.js","formBuilder/radio/FBRadioGroup.js","formBuilder/Tooltip.js","formBuilder/dependencies/DependencyWarning.js","formBuilder/dependencies/CardSelector.js","formBuilder/CardEnumOptions.js","formBuilder/utils.js","formBuilder/dependencies/ValueSelector.js","formBuilder/dependencies/DependencyPossibility.js","formBuilder/dependencies/DependencyField.js","formBuilder/CardModal.js","formBuilder/GeneralParameterInputs.js","formBuilder/CardGeneralParameterInputs.js","formBuilder/Add.js","formBuilder/Card.js","formBuilder/defaults/defaultInputs.js","formBuilder/Section.js","formBuilder/defaults/shortAnswerInputs.js","formBuilder/defaults/longAnswerInputs.js","formBuilder/defaults/numberInputs.js","formBuilder/defaults/arrayInputs.js","formBuilder/defaults/defaultFormInputs.js","formBuilder/FormBuilder.js","formBuilder/CardGallery.js","formBuilder/PreDefinedGallery.js","JsonSchemaFormEditor.js","PlaygroundContainer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","createUseStyles","portalTabs","display","padding","position","color","cursor","Tabs","defaultActiveTab","tabs","withSeparator","preventRerender","classes","useState","activeTab","setActiveTab","className","Nav","map","i","name","id","NavItem","NavLink","classnames","active","onClick","TabContent","Fragment","content","TabPane","tabId","ace","define","require","exports","Mode","extendModes","yamlEditor","marginLeft","marginRight","backgroundColor","width","margin","overflow","textAlign","border","YamlEditor","onChange","yaml","height","style","mode","theme","rawStr","editorProps","$blockScrolling","value","ErrorBoundary","props","state","hasError","error","this","setState","errorMessage","toString","onErr","errMessage","children","React","Component","checkbox","FBCheckbox","onChangeValue","isChecked","label","use","disabled","dataTest","labelClassName","classjss","potentialCheckboxId","checkboxId","data-test","type","undefined","checked","htmlFor","collapseElement","marginTop","fontSize","Collapse","iconClasses","fas","isOpen","disableToggle","toggleCollapse","title","FBRadioButton","required","autoFocus","radio","FBRadioGroup","options","defaultValue","horizontal","Math","random","option","index","typeMap","alert","help","toolTip","Example","text","textDecoration","href","UncontrolledTooltip","autohide","placement","target","DependencyWarning","parameters","enum","dependents","length","definedVals","Set","forEach","possibility","val","add","undefinedVals","Array","isArray","has","push","path","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","slice","filter","choice","includes","CardEnumOptions","initialValues","names","showNames","possibleValues","Input","ev","newVal","parseFloat","Number","isInteger","parseInt","isNaN","Error","parse","language","yamlParse","JSON","stringify","obj","yamlStringify","skipInvalid","categoryType","category","allFormInputs","generateCategoryHash","categoryHash","Object","keys","categoryName","matchIf","match","types","hash","widget","field","format","$ref","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","supportedPropertyParameters","supportedUiParameters","checkForUnsupportedFeatures","schema","uischema","unsupportedFeatures","widgets","fields","inputType","possibleOptions","supportedWidgets","supportedFields","supportedOptions","property","uiProperty","propDefined","properties","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","correctName","replace","key","uiProp","uiOption","checkObjectForUnsupportedFeatures","generateElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","elementDict","startsWith","parent","group","possibilityIndex","requiredValues","dependent","cardPropList","remainder","remCard","elementArray","elementNames","elem","newElem","neighborNames","updateElementNames","countElementsFromSchema","schemaData","elementCount","generateSchemaElementFromElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","elementName","childrenComponents","child","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","updateSchemas","definedUi","newUiSchema","addCardObj","newElementObjArr","max","charAt","default","splice","addSectionObj","generateElementComponentsFromSchemas","uiSchemaData","hideKey","cardOpenArray","setCardOpenArray","mods","Card","Section","elementPropArr","elementProp","expanded","TypeSpecificParameters","modalBody","getCardParameterInputComponentForType","componentProps","newCardObj","newDataProps","newUiProps","propName","oldElement","onDelete","onMoveUp","tempBlock","onMoveDown","addElem","cardOpen","setCardOpen","newState","newRef","oldSection","onNameChange","newName","onRequireToggle","onDependentsChange","newDependents","reference","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","updatedChildren","propagateDefinitionChanges","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","combination","string","oldCombo","number","array","object","newCase","propArr","newEnum","DependencyPossibility","newPossibility","dependencyField","marginBottom","borderRadius","DependencyField","valueBased","checkIfValueBasedDependency","selection","cardModal","CardModal","onClose","componentPropsState","setComponentProps","Modal","ModalHeader","ModalBody","ModalFooter","Button","GeneralParameterInputs","CardBody","cardBody","getCardBody","CardGeneralParameterInputs","keyState","setKeyState","titleState","setTitleState","description","descriptionState","setDescriptionState","categoryMap","categoryNameMap","inputName","displayName","categoryToNameMap","tooltipDescriptions","cardObjectName","onBlur","cardDisplayName","readOnly","cardDescription","cardInputType","newCategory","newProps","defaultUiSchema","defaultUiProps","defaultDataSchema","defaultDataProps","firstDefinition","addDetails","borderBottom","Add","hidden","popoverOpen","setPopoverOpen","createChoice","setCreateChoice","Popover","toggle","PopoverHeader","PopoverBody","cardEntries","flexDirection","fontWeight","cardInteractions","modalOpen","setModalOpen","newComponentProps","CardDefaultParameterInputs","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","time","ref","dropdown","sectionContainer","borderTop","paddingTop","elementNum","defaultCollapseStates","keyName","setKeyName","Alert","message","droppableId","providedDroppable","innerRef","droppableProps","draggableId","providedDraggable","draggableProps","dragHandleProps","formatDictionary","email","hostname","uri","regex","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","rel","pattern","shortAnswerInput","shortAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","CardArrayParameterInputs","minItems","maxItems","InnerCardWrapper","defaultFormInputs","customFormInputs","Item","items","newArr","shortAnswerInputs","longAnswerInputs","ArrayInputs","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","float","formHead","formBody","maxHeight","overflowY","minWidth","cssFloat","formFooter","FormBuilder","lang","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUiSchemaKey","preDefinedGallery","PreDefinedGallery","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi","parseForJsonSchemaForm","checkError","data","e","LangEditor","JsonSchemaFormEditor","formData","formToggle","outputToggle","schemaFormErrorFlag","validFormInput","editorWidth","submissionData","err","schemaError","schemaUiError","updateFormData","submitButtonMessage","onSubmit","updateSchema","updateUISchema","PlaygroundContainer","schemaTitle","uischemaTitle","App","Boolean","window","location","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7fd1f785.chunk.js","sourcesContent":["// @flow\n\nimport React, { useState } from \"react\";\n\nimport classnames from \"classnames\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { createUseStyles } from \"react-jss\";\n\ntype TabSpec = {\n  name: string,\n  content: Node,\n  id?: string,\n};\n\nconst useStyles = createUseStyles({\n  portalTabs: {\n    \"& .tab-content\": {\n      \"& .tab-pane > .tab-pane\": {\n        display: \"none\",\n        padding: \"2em\",\n      },\n      \"& .active > .tab-pane\": {\n        display: \"block\",\n      },\n    },\n    \"& .nav\": {\n      \"& .nav-link\": {\n        position: \"relative\",\n        display: \"inline-flex\",\n        padding: \"10px\",\n      },\n      \"& li\": {\n        display: \"inline-block\",\n      },\n      \"& .nav-item\": {\n        \"& .active\": {\n          color: \"#212529 !important\",\n          \"font-weight\": 600,\n        },\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n        \"& a\": {\n          color: \"#ccc\",\n        },\n      },\n    },\n  },\n});\n\ntype Props = {\n  defaultActiveTab?: number,\n  tabs: TabSpec[],\n  withSeparator?: boolean,\n  preventRerender?: boolean,\n};\n\nexport default function Tabs({\n  defaultActiveTab = 0,\n  tabs = [],\n  withSeparator = false,\n  preventRerender = false,\n}: Props) {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(defaultActiveTab);\n\n  return (\n    <div className={classes.portalTabs}>\n      <Nav tabs>\n        {tabs.map(({ name, id }, i) => (\n          <NavItem key={i} id={id}>\n            <NavLink\n              className={classnames({ active: activeTab === i })}\n              onClick={() => {\n                setActiveTab(i);\n              }}\n            >\n              {name}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent\n        activeTab={activeTab}\n        className={classnames({\n          \"with-separator\": withSeparator,\n        })}\n      >\n        <React.Fragment>\n          {tabs.map(({ content }, i) => (\n            <TabPane key={i} tabId={i}>\n              {activeTab === i && (preventRerender ? true : content)}\n              {preventRerender ? content : \"\"}\n            </TabPane>\n          ))}\n        </React.Fragment>\n      </TabContent>\n    </div>\n  );\n}\n","/*\nAdapted from the ace yaml mode file in ace/mode/yaml\nhttps://github.com/ajaxorg/ace/blob/master/lib/ace/mode/yaml.js\n*/\n\nexport default (ace) => {\n  ace.define(\n    \"ace/mode/yaml\",\n    [\n      \"require\",\n      \"exports\",\n      \"module\",\n      \"ace/lib/oop\",\n      \"ace/mode/text\",\n      \"ace/mode/yaml_highlight_rules\",\n      \"ace/mode/matching_brace_outdent\",\n      \"ace/mode/folding/coffee\",\n    ],\n    (require, exports) => {\n      // disabling linting for file paths that won't show up to linter\n      /* eslint-disable */\n      const oop = require(\"../lib/oop\");\n      const TextMode = require(\"./text\").Mode;\n    }\n  );\n\n  ace.require(\"ace/mode/yaml\");\n};\n","// @flow\n\nimport React from \"react\";\nimport ace from \"ace-builds\";\nimport AceEditor from \"react-ace\";\nimport { createUseStyles } from \"react-jss\";\nimport extendModes from \"./extendModes\";\n\nextendModes(ace);\n\nconst useStyles = createUseStyles({\n  yamlEditor: {\n    \"& .header\": {\n      \"& a\": { cursor: \"pointer\", marginLeft: \"1em\", marginRight: \"1em\" },\n      backgroundColor: \"green\",\n      display: \"inline-block\",\n      width: \"100%\",\n      color: \"white\",\n      padding: \"0.5em\",\n      \"& h3\": {\n        \"font-size\": \"1.5em\",\n      },\n    },\n    \"& .container\": { padding: \"0\", \".ace_editor\": { margin: \"0\" } },\n    \"& .editor\": { overflow: \"hidden\" },\n    \"& .viewer\": { overflow: \"auto\", textAlign: \"left\" },\n    display: \"inline-block\",\n    overflow: \"hidden\",\n    border: \"1px solid green\",\n  },\n});\n\nexport default function YamlEditor({\n  onChange,\n  yaml,\n  width,\n  height,\n  name,\n}: {\n  onChange?: (string) => any,\n  yaml: string,\n  width?: string,\n  height?: string,\n  name?: string,\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.yamlEditor}>\n      <div style={{ width: width ? width : \"500px\" }} className=\"header\">\n        <h3>{name}</h3>\n      </div>\n      <div className=\"container editor\">\n        <AceEditor\n          mode={\"yaml\"}\n          theme=\"github\"\n          onChange={(rawStr: string) => {\n            if (onChange) onChange(rawStr);\n          }}\n          editorProps={{\n            $blockScrolling: true,\n          }}\n          value={yaml}\n          width={\"100%\"}\n          height={height ? height : \"500px\"}\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  children: any,\n  onErr?: (string) => any,\n  errMessage?: string,\n};\n\ntype State = {\n  hasError: boolean,\n  error: string,\n};\n\n/* \nContainer for potentially error generating components\nTriggers the optional onErr function with error message as string\nProvides the option to attempt rendering the children again\n*/\nclass ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: \"\" };\n  }\n\n  componentDidCatch(error: any) {\n    this.setState({ hasError: true });\n    const errorMessage = error.toString();\n    this.setState({\n      error: errorMessage,\n    });\n    if (this.props.onErr) this.props.onErr(errorMessage);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <p>\n            {this.props.errMessage ? this.props.errMessage : this.state.error}\n          </p>\n          <button\n            onClick={() => {\n              this.setState({ hasError: false, error: \"\" });\n              if (this.props.onErr) this.props.onErr(\"\");\n            }}\n          >\n            Try Again\n          </button>\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  onChangeValue: Function,\n  isChecked: boolean,\n  id?: string,\n  label?: string,\n  use?: string,\n  value?: string,\n  disabled?: boolean,\n  dataTest?: string,\n  labelClassName?: string,\n};\n\nconst FBCheckbox = ({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}: Props) => {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId = potentialCheckboxId !== '' ? potentialCheckboxId : null;\n  return (\n    <div data-test=\"checkbox\" className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type=\"checkbox\"\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={disabled ? () => {} : onChangeValue}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className=\"checkbox-overlay\">\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FBCheckbox;\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { 'i.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& i.toggle-collapse': {\n      fontSize: '2.3rem',\n      margin: '17px',\n      cursor: 'pointer',\n      marginLeft: '0',\n    },\n  },\n});\n\ntype Props = {\n  // Determines if the Collapse component is open\n  isOpen: boolean,\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: () => void,\n  // The title to display in the collapse header\n  title: Node,\n  // Anything to be rendered within the collapse\n  children: any,\n  // If true will gray out and disable */\n  disableToggle?: boolean,\n  className?: string,\n};\n\nconst Collapse = (props: Props) => {\n  const iconClasses = classnames({\n    'toggle-collapse': true,\n    fas: true,\n    'fa-caret-down': props.isOpen,\n    'fa-caret-right': !props.isOpen,\n  });\n\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    }\n  );\n\n  return (\n    <div className={classes}>\n      <div className=\"d-flex\">\n        <i\n          onClick={!props.disableToggle ? props.toggleCollapse : () => {}}\n          className={iconClasses}\n        />\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  label: string | number,\n  value?: any,\n  name?: string,\n  checked?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  children?: any,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioButton(props: Props) {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <label className={classes} key={value}>\n      {props.children}\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <span className=\"fb-custom-radio-button\" />\n      {label}\n    </label>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  options: Array<{ label: string | number, value: string | number }>,\n  defaultValue?: any,\n  horizontal?: boolean,\n  id?: string,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioGroup(props: Props) {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n  return (\n    <div id={id} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          id={id}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","// @flow\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport type { Node } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\n\nconst typeMap = {\n  alert: `fas fa-asterisk`,\n  help: 'fa fa-question-circle',\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: Node,\n  type: 'alert' | 'help',\n  id: string,\n}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span\n        style={{ textDecoration: 'underline', color: 'blue' }}\n        href=\"#\"\n        id={id}\n      >\n        <i className={typeMap[type]}></i>\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement=\"top\"\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport Tooltip from '../Tooltip';\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: {\n  parameters: {\n    [string]: any,\n    name?: string,\n    dependents?: Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n    type?: string,\n    enum?: Array<string | number>,\n    neighborNames?: Array<string>,\n    schema?: string,\n  },\n}) {\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    parameters.dependents.forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val) => definedVals.add(val));\n    });\n    const undefinedVals = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val)) undefinedVals.push(val);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${parameters.path}_valuewarning`}\n            type=\"help\"\n            text=\"Each possible value for a value-based dependency must be defined to work properly\"\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val) => (\n            <li>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","// @flow\n\nimport * as React from 'react';\nimport Select from 'react-select';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>,\n  chosenChoices: Array<string>,\n  onChange: (chosenChoices: Array<string>) => void,\n  placeholder: string,\n  path: string,\n}) {\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${path}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <i\n              className=\"fa fa-times\"\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className=\"card-modal-select\"\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: {\n  initialValues: Array<any>,\n  names?: Array<string>,\n  showNames: boolean,\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void,\n  type: string,\n}) {\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className=\"card-enum-option\">\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder=\"Possible Value\"\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names\n            );\n          }}\n          className=\"card-text\"\n        />\n        <Input\n          value={name || ''}\n          placeholder=\"Name\"\n          key={`name-${index}`}\n          type=\"text\"\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className=\"card-text\"\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <i\n          className=\"fa fa-trash\"\n          onClick={() => {\n            // remove this value\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                ...initialValues.slice(index + 1),\n              ],\n              names\n                ? [...names.slice(0, index), ...names.slice(index + 1)]\n                : undefined\n            );\n          }}\n        ></i>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"card-enum-header\">\n        <h5> Value </h5>\n        <h5 style={{ display: showNames ? 'initial' : 'none' }}>\n          {' '}\n          Display Label{' '}\n        </h5>\n      </div>\n      {possibleValues}\n      <i\n        className=\"fa fa-plus\"\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined\n          );\n        }}\n      ></i>\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { safeLoad as yamlParse, safeDump as yamlStringify } from 'js-yaml';\nimport type { CardProps, ElementProps, FormInput, Mods } from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string, language: string) {\n  if (!text) return {};\n  return language === 'yaml' ? (yamlParse(text): any) : (JSON.parse(text): any);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any, language: string) {\n  if (!obj) return '';\n  return language === 'yaml'\n    ? yamlStringify(obj, { skipInvalid: true })\n    : JSON.stringify(obj, null, 5);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  return allFormInputs[category].defaultDataSchema;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  return allFormInputs[category].defaultUiSchema;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  return allFormInputs[category].cardBody;\n}\nexport function categoryToNameMap(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  const categoryNameMap = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: { [string]: FormInput }) {\n  const categoryHash = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type || ''};widget:${match.widget || ''};field:${\n          match.field || ''\n        };format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [string]: string }\n) {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:option',\n  'ui:field',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object')\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      )\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n    });\n\n  if (uischema && typeof uischema === 'object')\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      )\n        propDefined = true;\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach((grouping) => {\n                  if (grouping.properties)\n                    if (Object.keys(grouping.properties).includes(uiProperty))\n                      propDefined = true;\n                });\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties\n                  ).includes(uiProperty)\n                )\n                  propDefined = true;\n              }\n            }\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty))\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`\n        );\n    });\n\n  // check for unsupported property parameters\n  if (schema.properties)\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        const correctName = parameter.replace(/\\W/g, '_');\n        if (parameter !== correctName) {\n          unsupportedFeatures.push(\n            `Improper name '${parameter}': using '${correctName}' instead`\n          );\n        }\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type\n            )\n          )\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`\n            );\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`\n              );\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`\n              );\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp))\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`\n              );\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            )\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`\n              );\n\n            // check unsupported ui option\n            if (uiProp === 'ui:option')\n              Object.keys(uischema[parameter]['ui:option']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption))\n                    unsupportedFeatures.push(\n                      `UI Property: ui:option.${uiOption} for ${parameter}`\n                    );\n                }\n              );\n          });\n        }\n      }\n    );\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  allFormInputs: { [string]: FormInput }\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets = [];\n  const fields = [];\n  const options = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget))\n        widgets.push(match.widget);\n      if (match.field && !fields.includes(match.field))\n        fields.push(match.field);\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions\n      )\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string }\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]]\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions);\n    Object.keys(newElement.uiOptions).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n      }\n    });\n\n    newElement.dataOptions.category = getCardCategory(newElement, categoryHash);\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement = {};\n    let elementDetails =\n      element && typeof element === 'object'\n        ? (element: {\n            ...any,\n            $ref?: string,\n          })\n        : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      )\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`\n        );\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...elementDetails,\n          ...definitionData[pathArr[2]],\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.dataOptions = elementDetails;\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement,\n        categoryHash\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (!Object.keys(elementDict).includes(parameter)) {\n                const newElement = generateElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  definitionData,\n                  definitionUi,\n                  categoryHash\n                );\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter\n                );\n              }\n            }\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            definitionData,\n            definitionUi,\n            categoryHash\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name] = newElement;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList);\n  return (cardPropList: Array<ElementProps>);\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any) {\n  if (!schemaData.properties) return 0;\n  const elementDict = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = {};\n          elementCount += 1;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return (elementCount: number);\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    return {\n      $ref: element.$ref,\n    };\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(\n  elementArr: Array<ElementProps>\n) {\n  if (!elementArr) return {};\n  const newSchema = {};\n\n  const props = {};\n  const dependencies = {};\n  const elementDict = {};\n  const dependentElements = new Set([]);\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility) => {\n            const childrenComponents = {};\n            const requiredValues = [];\n            possibility.children.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child]\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents = {};\n        const requiredValues = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child]\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName))\n      props[element.name] = generateSchemaElementFromElement(element);\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map<string>(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any\n) {\n  if (!elementArr) return {};\n\n  const uiSchema = {};\n  const uiOrder = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]])\n        uiSchema[element.name] = definitions[pathArr[2]];\n    } else if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (element.propType === 'section' && element.uischema) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [string]: FormInput }\n) {\n  return allFormInputs[category].modalBody;\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: Array<ElementProps>,\n  parameters: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n  }\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const definedUi = (uischema || {}).definitions\n    ? { definitions: uischema.definitions }\n    : {};\n  const newUiSchema = ({\n    ...definedUi,\n    ...generateUiSchemaFromElementProps(elementArr, definitionUi),\n  }: { [string]: any });\n  const newSchema = ({\n    ...schema,\n    ...generateSchemaFromElementProps(elementArr),\n  }: { [string]: any });\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n\n  onChange(newSchema, newUiSchema);\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  // ensure that each added block has a unique name\n\n  const names = newElementObjArr.map((element) => element.name);\n  const i =\n    names.length > 0\n      ? Math.max(\n          ...names.map((name) =>\n            name.startsWith('newInput')\n              ? Number.parseInt(name.charAt(8), 10)\n              : 0\n          )\n        ) + 1\n      : 1;\n\n  const newElement = ({\n    name: `newInput${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  // ensure that each added block has a unique name\n  const names = newElementObjArr.map((element) => element.name);\n  const i =\n    names.length > 0\n      ? Math.max(\n          ...names.map((name) =>\n            name.startsWith('newInput')\n              ? Number.parseInt(name.charAt(8), 10)\n              : 0\n          )\n        ) + 1\n      : 1;\n\n  const newElement = ({\n    name: `newInput${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [string]: any },\n  uiSchemaData: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  hideKey?: boolean,\n  path: string,\n  cardOpenArray: Array<boolean>,\n  setCardOpenArray: (newArr: Array<boolean>) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n  Card: React.AbstractComponent<{ [string]: any }>,\n  Section: React.AbstractComponent<{ [string]: any }>,\n}) {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData, 'yaml'), 'yaml');\n  const uischema = parse(stringify(uiSchemaData, 'yaml'), 'yaml');\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map<React.Node>((elementProp, index) => {\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={{\n            name: elementPropArr[index].name,\n            required: elementPropArr[index].required,\n            hideKey,\n            path: `${path}_${elementPropArr[index].name}`,\n            definitionData,\n            definitionUi,\n            neighborNames: elementPropArr[index].neighborNames,\n            dependents: elementPropArr[index].dependents,\n            dependent: elementPropArr[index].dependent,\n            parent: elementPropArr[index].parent,\n            ...elementPropArr[index].uiOptions,\n            ...elementPropArr[index].dataOptions,\n          }}\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps = {};\n            const newUiProps = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'lang',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [string]: any },\n            newUiSchema: { [string]: any },\n            newRef?: string\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>,\n              value?: any,\n            }>\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n    categoryHash: { [string]: string },\n  }\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: Array<ElementProps>,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  categoryHash: { [string]: string }\n) {\n  const updatedElementArr = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash\n      );\n      const newUiSchema = {\n        ...element.uischema,\n        ...generateUiSchemaFromElementProps(updatedChildren, definitionUi),\n      };\n      const newSchema = {\n        ...element.schema,\n        ...generateSchemaFromElementProps(updatedChildren),\n      };\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  categoryHash: { [string]: string }\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport { parse } from '../utils';\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>,\n    value: any,\n  },\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: string,\n  path: string,\n}) {\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder=\"Allowed value\"\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder=\"Allowed value\"\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr = (possibility.value.enum: Array<any>);\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${path}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val = combination[key];\n                return (\n                  <React.Fragment>\n                    <h5>{key}:</h5>\n                    {\n                      {\n                        string: (\n                          <Input\n                            value={val || ''}\n                            placeholder=\"String value\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              const newVal = ev.target.value;\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                        number: (\n                          <Input\n                            value={val || ''}\n                            placeholder=\"Number value\"\n                            type=\"number\"\n                            onChange={(ev: any) => {\n                              const newVal = Number.parseFloat(ev.target.value);\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-number\"\n                          />\n                        ),\n                        array: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder=\"Array in JSON\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON array input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                        object: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder=\"Object in JSON\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON object input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                      }[typeof val]\n                    }\n                  </React.Fragment>\n                );\n              })}\n              <i\n                className=\"fa fa-times\"\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <i\n            className=\"fa fa-plus\"\n            onClick={() => {\n              const newCase = {};\n              const propArr = parentSchema\n                ? (parse(parentSchema, 'yaml'): any).properties\n                : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>,\n    value?: any,\n  },\n  neighborNames: Array<string>,\n  path: string,\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  onDelete: () => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: string,\n}) {\n  return (\n    <div className=\"form-dependency-condition\">\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${path}_bulk`}\n          type=\"help\"\n          text=\"Choose the other form elements that depend on this one\"\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder={'Choose a dependent...'}\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'initial' : 'none' }}>\n        <br />\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>,\n            value?: any,\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <br />\n      <i className=\"fa fa-times\" onClick={() => onDelete()} />\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& i': { cursor: 'pointer' },\n    '& .fa-plus': { marginLeft: '1em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n        '& .card-enum-option': {\n          'display': 'flex',\n          'flex-direction': 'row',\n          '& input': {\n            'width': '80%',\n            marginRight: '1em',\n            marginBottom: '0.5em',\n          },\n        },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>,\n    value?: any,\n  }>\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [string]: any,\n  name?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  type?: string,\n  enum?: Array<string | number>,\n  neighborNames?: Array<string>,\n  schema?: string,\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams,\n  onChange: (newParams: DependencyParams) => void,\n}) {\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h3>\n        Dependencies{' '}\n        <Tooltip\n          id={`${parameters.path}_dependent`}\n          type=\"help\"\n          text=\"Control whether other form elements show based on this one\"\n        />\n      </h3>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: 'Specific value dependency',\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n          <Tooltip\n            id={`${parameters.path}_valuebased`}\n            type=\"help\"\n            text=\"Specify whether these elements should show based on this element's value\"\n          />{' '}\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className=\"form-dependency-conditions\">\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${parameters.path}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>,\n                  value?: any,\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <i\n          className=\"fa fa-plus\"\n          id={`${parameters.path}_adddependency`}\n          onClick={() => {\n            const newDependents = parameters.dependents\n              ? [...parameters.dependents]\n              : [];\n            newDependents.push({\n              children: [],\n              value: valueBased ? { enum: [] } : undefined,\n            });\n            onChange({\n              ...parameters,\n              dependents: newDependents,\n            });\n          }}\n        />\n        <UncontrolledTooltip\n          placement=\"top\"\n          target={`${parameters.path}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Modal, ModalHeader, Button, ModalBody, ModalFooter } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { Parameters } from './types';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { fontSize: '14px', marginBottom: '0' },\n    '& h3': { fontSize: '16px' },\n    '& > input': { marginBottom: '1em', height: '32px' },\n    '& .fa-question-circle': { color: 'var(--gray)' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nexport default function CardModal({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}: {\n  componentProps: {\n    [string]: any,\n  },\n  onChange: (any) => void,\n  isOpen: boolean,\n  onClose: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n}) {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] = React.useState(\n    componentProps\n  );\n\n  React.useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n\n  return (\n    <Modal isOpen={isOpen} data-test=\"card-modal\" className={classes.cardModal}>\n      <ModalHeader className=\"card-modal-header\">\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h5>Additional Settings</h5>\n        </div>\n      </ModalHeader>\n      <ModalBody className=\"card-modal-entries\">\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <DependencyField\n          parameters={(componentPropsState: { [string]: any })}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color=\"primary\"\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n          }}\n          color=\"secondary\"\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { getCardBody } from './utils';\nimport type { Parameters, Mods, FormInput } from './types';\n\n// specify the inputs required for any type of object\nexport default function GeneralParameterInputs({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}: {\n  category: string,\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}) {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n} from './utils';\nimport type { Parameters, Mods, FormInput } from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}) {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description\n  );\n  const categoryMap = categoryToNameMap(parameters.category, allFormInputs);\n\n  return (\n    <div>\n      <div className=\"card-entry\">\n        <h5>\n          Object Name{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                ? mods.tooltipDescriptions.cardObjectName\n                : 'The back-end name of the object'\n            }\n            id={`${(keyState: string)}_nameinfo`}\n            type=\"help\"\n          />\n        </h5>\n\n        <Input\n          value={keyState || ''}\n          placeholder=\"Key\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setKeyState(ev.target.value.replace(/\\W/g, '_'))\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            onChange({\n              ...parameters,\n              name: ev.target.value,\n            })\n          }\n          className=\"card-text\"\n        />\n      </div>\n      <div\n        className={`card-entry ${\n          parameters.$ref === undefined ? '' : 'disabled-input'\n        }`}\n      >\n        <h5>\n          Display Name{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                ? mods.tooltipDescriptions.cardDisplayName\n                : 'The user-facing name of this object'\n            }\n            id={`${(keyState: string)}-titleinfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Input\n          value={titleState || ''}\n          placeholder=\"Title\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setTitleState(ev.target.value)\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n            onChange({ ...parameters, title: ev.target.value });\n          }}\n          className=\"card-text\"\n          readOnly={parameters.$ref !== undefined}\n        />\n      </div>\n      <div className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}>\n        <h5>\n          Description{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardDescription === 'string'\n                ? mods.tooltipDescriptions.cardDescription\n                : 'This will appear as help text on the form'\n            }\n            id={`${(keyState: string)}-descriptioninfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Input\n          value={descriptionState || ''}\n          placeholder=\"Description\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setDescriptionState(ev.target.value)\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n            onChange({ ...parameters, description: ev.target.value });\n          }}\n          className=\"card-text\"\n          readOnly={parameters.$ref !== undefined}\n        />\n      </div>\n      <div className=\"card-entry\">\n        <h5>\n          Input Type{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardInputType === 'string'\n                ? mods.tooltipDescriptions.cardInputType\n                : 'The type of form input displayed on the form'\n            }\n            id={`${(keyState: string)}-inputinfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Select\n          value={{\n            value: parameters.category,\n            label: categoryMap[parameters.category],\n          }}\n          placeholder=\"Category\"\n          options={Object.keys(categoryMap)\n            .filter(\n              (key) =>\n                key !== 'ref' ||\n                (parameters.definitionData &&\n                  Object.keys(parameters.definitionData).length !== 0)\n            )\n            .map((key) => ({\n              value: key,\n              label: categoryMap[key],\n            }))}\n          onChange={(val: any) => {\n            // figure out the new 'type'\n            const newCategory = val.value;\n\n            const newProps = {\n              ...defaultUiProps(newCategory, allFormInputs),\n              ...defaultDataProps(newCategory, allFormInputs),\n              name: parameters.name,\n              required: parameters.required,\n            };\n            if (newProps.$ref !== undefined && !newProps.$ref) {\n              // assign an initial reference\n              const firstDefinition = Object.keys(parameters.definitionData)[0];\n              newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n            }\n            onChange({\n              ...newProps,\n              title: newProps.title || parameters.title,\n              default: newProps.default || '',\n              type: newProps.type || categoryType(newCategory, allFormInputs),\n              category: newProps.category || newCategory,\n            });\n          }}\n          className=\"card-select\"\n        />\n      </div>\n      <div className=\"card-category-options\">\n        <GeneralParameterInputs\n          category={parameters.category}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioGroup from './radio/FBRadioGroup';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      'z-index': '1051 !important',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .popover-body': {\n          '& .fb-radio-group': { display: 'block' },\n          '& div': { margin: '0', display: 'inline-block', width: '50%' },\n          '& .left': { textAlign: 'left' },\n          '& .right': { textAlign: 'right' },\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  name,\n  addElem,\n  hidden,\n}: {\n  name: string,\n  addElem: (choice: string) => void,\n  hidden?: boolean,\n}) {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <i\n        className=\"fa fa-plus-square card-add\"\n        onClick={() => setPopoverOpen(true)}\n        id={`${name}_add`}\n      ></i>\n      <UncontrolledTooltip placement=\"top\" target={`${name}_add`}>\n        Create new form element\n      </UncontrolledTooltip>\n      <Popover\n        placement=\"bottom\"\n        target={`${name}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${name}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className={'choose-create'}\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: 'Form element',\n              },\n              {\n                value: 'section',\n                label: 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className=\"left\">\n            <Button onClick={() => setPopoverOpen(false)} color=\"secondary\">\n              Cancel\n            </Button>\n          </div>\n          <div className=\"right\">\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport Tooltip from './Tooltip';\nimport type { Parameters, Mods, FormInput } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n      margin: 0,\n    },\n    '& .card-entry': {\n      display: 'inline-block',\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      'border': '1px solid var(--gray)',\n      'border-radius': '4px',\n    },\n    '& .card-array': { '& .fa-plus-square': { display: 'none' } },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'var(--light-gray)',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& i': { cursor: 'pointer' },\n      '& .card-enum-option': {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& input': { width: '80%', marginRight: '1em', marginBottom: '0.5em' },\n      },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': { marginRight: '1em', borderRadius: '4px', padding: '.25em' },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n}: {\n  componentProps: {\n    [string]: string | number | boolean | Array<string | number>,\n    path: string,\n  },\n  onChange: ({ [string]: any }) => void,\n  onDelete?: () => void,\n  onMoveUp?: () => void,\n  onMoveDown?: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}) {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className=\"label\">\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${(componentProps.parent: any)}`}\n                  id={`${componentProps.path}_parentinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${(componentProps.$ref: any)}`}\n                  id={`${componentProps.path}_refinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className=\"arrows\">\n              <i\n                className=\"fa fa-arrow-up\"\n                id={`${componentProps.path}_moveupbiginfo`}\n                onClick={() => (onMoveUp ? onMoveUp() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${componentProps.path}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <i\n                className=\"fa fa-arrow-down\"\n                id={`${componentProps.path}_movedownbiginfo`}\n                onClick={() => (onMoveDown ? onMoveDown() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${componentProps.path}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={(componentProps: any)}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <i\n            id={`${componentProps.path}_editinfo`}\n            className=\"fa fa-pencil\"\n            onClick={() => setModalOpen(true)}\n          ></i>\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`${componentProps.path}_editinfo`}\n          >\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <i\n            className=\"fa fa-trash\"\n            id={`${componentProps.path}_trashinfo`}\n            onClick={onDelete || (() => {})}\n          ></i>\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`${componentProps.path}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label=\"Required\"\n            id={`${\n              typeof componentProps.path === 'string'\n                ? componentProps.path\n                : 'card'\n            }_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: {\n            [string]: string | number | boolean | Array<string | number>,\n          }) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          name={`${componentProps.path}`}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport Select from 'react-select';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport type { Parameters } from '../types';\n\n// specify the inputs required for a string type object\nexport function CardDefaultParameterInputs() {\n  return <div></div>;\n}\n\nfunction TimeField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default time</h5>\n      <Input\n        value={parameters.default || ''}\n        placeholder=\"Default\"\n        type=\"datetime-local\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Checkbox({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className=\"card-boolean\">\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label=\"Default\"\n      />\n    </div>\n  );\n}\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => isNaN(val));\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString\n  );\n  return (\n    <div className=\"card-enum\">\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label=\"Display label is different from value\"\n        id={`${parameters.path}_different`}\n      />\n      <div\n        style={{\n          display:\n            containsUnparsableString || !enumArray.length ? 'none' : 'initial',\n        }}\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label=\"Force number\"\n          id={`${\n            typeof parameters.path === 'string' ? parameters.path : ''\n          }_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nfunction RefChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className=\"card-select\">\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: parameters.$ref,\n        }}\n        placeholder=\"Reference\"\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label: `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className=\"card-select\"\n      />\n    </div>\n  );\n}\n\nconst defaultInputs = {\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: TimeField,\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: [null],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n    },\n    defaultUiSchema: {},\n    type: null,\n    cardBody: RefChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', null],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: null,\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', null],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: null,\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport { Alert, Input, UncontrolledTooltip } from 'reactstrap';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport type { FormInput, Mods } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      borderBottom: '1px solid var(--gray)',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .section-entry': {\n        display: 'inline-block',\n        margin: '0',\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      i: { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid var(--gray)',\n      paddingTop: '1em',\n      '& .fa': { marginRight: '1em', borderRadius: '4px', padding: '0.25em' },\n      '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  neighborNames,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: {\n  name: string,\n  required: boolean,\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: (\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    ref?: string\n  ) => void,\n  onNameChange: (string) => void,\n  onDependentsChange: (\n    Array<{\n      children: Array<string>,\n      value?: any,\n    }>\n  ) => void,\n  onRequireToggle: () => any,\n  onDelete: () => any,\n  onMoveUp?: () => any,\n  onMoveDown?: () => any,\n  path: string,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  hideKey?: boolean,\n  reference?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  dependent?: boolean,\n  parent?: string,\n  neighborNames?: Array<string>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}) {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className=\"label\">\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${keyName}_parentinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className=\"arrows\">\n              <i\n                className=\"fa fa-arrow-up\"\n                id={`${path}_moveupbiginfo`}\n                onClick={() => (onMoveUp ? onMoveUp() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${path}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <i\n                className=\"fa fa-arrow-down\"\n                id={`${path}_movedownbiginfo`}\n                onClick={() => (onMoveDown ? onMoveDown() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${path}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className=\"section-head\">\n            {reference ? (\n              <div className=\"section-entry section-reference\">\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder=\"Reference\"\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className=\"section-select\"\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className=\"section-entry\">\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text=\"The name that will appear in the backend of Servicely\"\n                  id={`${keyName}_nameinfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={keyName || ''}\n                placeholder=\"Key\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  setKeyName(ev.target.value.replace(/\\W/g, '_'))\n                }\n                onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onNameChange(ev.target.value)\n                }\n                className=\"card-text\"\n                readOnly={hideKey}\n              />\n            </div>\n            <div className=\"section-entry\">\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text=\"The name Servicely will show to service requesters\"\n                  id={`${keyName}_titleinfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder=\"Title\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema\n                  )\n                }\n                className=\"card-text\"\n              />\n            </div>\n            <div className=\"section-entry\">\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text=\"This will appear as gray text in the service request form\"\n                  id={`${keyName}_descriptioninfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder=\"Description\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema\n                  )\n                }\n                className=\"card-text\"\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color=\"warning\"\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${path}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className=\"section-body\">\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n              className=\"section-body\"\n            >\n              <Droppable droppableId=\"droppable\">\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className=\"section-footer\">\n            <Add\n              name={`${keyName}_inner`}\n              addElem={(choice: string) => {\n                if (choice === 'card') {\n                  addCardObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                } else if (choice === 'section') {\n                  addSectionObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                }\n              }}\n              hidden={\n                schemaData.properties &&\n                Object.keys(schemaData.properties).length !== 0\n              }\n            />\n          </div>\n          <div className=\"section-interactions\">\n            <i\n              className=\"fa fa-pencil\"\n              id={`${path}_editinfo`}\n              onClick={() => setModalOpen(true)}\n            ></i>\n            <UncontrolledTooltip placement=\"top\" target={`${path}_editinfo`}>\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <i\n              className=\"fa fa-trash\"\n              id={`${path}_trashinfo`}\n              onClick={() => (onDelete ? onDelete() : {})}\n            ></i>\n            <UncontrolledTooltip placement=\"top\" target={`${path}_trashinfo`}>\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label=\"Required\"\n              id={`${path}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add name={keyName} addElem={(choice: string) => addElem(choice)} />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\nconst formatDictionary = {\n  '': 'None',\n  'date-time': 'Date-Time',\n  email: 'Email',\n  hostname: 'Hostname',\n  time: 'Time',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\n// specify the inputs required for a string type object\nfunction CardShortAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder=\"Minimum Length\"\n        key=\"minLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder=\"Maximum Length\"\n        key=\"maxLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>\n        Regular Expression Pattern\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Tooltip\n            id={`${parameters.path}_regex`}\n            type=\"help\"\n            text=\"Regular expression pattern that this must satisfy\"\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder=\"Regular Expression Pattern\"\n        key=\"pattern\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className=\"card-modal-text\"\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${parameters.path}_format`}\n          type=\"help\"\n          text=\"Require string input to match a certain common format\"\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Format\"\n        key=\"format\"\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Tooltip\n            id={`${parameters.path}_autocomplete`}\n            type=\"help\"\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Auto Complete\"\n        key=\"ui:autocomplete\"\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label=\"Auto Focus\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction ShortAnswerField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Password({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"password\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst shortAnswerInput = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\nconst formatDictionary = {\n  '': 'None',\n  'date-time': 'Date-Time',\n  email: 'Email',\n  hostname: 'Hostname',\n  time: 'Time',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder=\"Minimum Length\"\n        key=\"minLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder=\"Maximum Length\"\n        key=\"maxLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>\n        Regular Expression Pattern\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">\n          <Tooltip\n            id={`${parameters.path}_regex`}\n            type=\"help\"\n            text=\"Regular expression pattern that this must satisfy\"\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder=\"Regular Expression Pattern\"\n        key=\"pattern\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className=\"card-modal-text\"\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${parameters.path}_format`}\n          type=\"help\"\n          text=\"Require string input to match a certain common format\"\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Format\"\n        key=\"format\"\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label=\"Auto Focus\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction LongAnswer({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default input</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"textarea\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-textarea\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst longAnswerInput = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs,\n  },\n};\n\nexport default longAnswerInput;\n","// @flow\n\nimport React from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\n// specify the inputs required for a number type object\nfunction CardNumberParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${parameters.path}_multiple`}\n          type=\"help\"\n          text=\"Require number to be a multiple of this number\"\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder=\"ex: 2\"\n        key=\"multipleOf\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder=\"ex: 3\"\n        key=\"minimum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className=\"card-modal-number\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          key=\"exclusiveMinimum\"\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label=\"Exclusive Minimum\"\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder=\"ex: 8\"\n        key=\"maximum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className=\"card-modal-number\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          key=\"exclusiveMaximum\"\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label=\"Exclusive Maximum\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction NumberField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className=\"card-number\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst numberInputs = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","// @flow\n\nimport React from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport type { Parameters, Mods, FormInput } from '../types';\n\n// specify the inputs required for a string type object\nfunction CardArrayParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: ({ [string]: any }) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder=\"ex: 2\"\n        key=\"minimum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder=\"ex: 2\"\n        key=\"maximum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n    </div>\n  );\n}\n\nfunction InnerCardWrapper({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [string]: FormInput },\n}) {\n  return function InnerCard({\n    parameters,\n    onChange,\n    mods,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n    mods?: Mods,\n  }) {\n    const newDataProps = {};\n    const newUiProps = {};\n    const allFormInputs = {\n      ...defaultFormInputs,\n      ...(mods && mods.customFormInputs),\n    };\n    // parse components into data and ui relevant pieces\n    Object.keys(parameters).forEach((propName) => {\n      if (propName.startsWith('ui:*')) {\n        newUiProps[propName.substring(4)] = parameters[propName];\n      } else if (propName.startsWith('ui:')) {\n        newUiProps[propName] = parameters[propName];\n      } else if (!['name', 'required'].includes(propName)) {\n        newDataProps[propName] = parameters[propName];\n      }\n    });\n\n    const definitionData = parameters.definitionData\n      ? parameters.definitionData\n      : {};\n    const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n    const [cardOpen, setCardOpen] = React.useState(false);\n    if (parameters.type !== 'array') {\n      return <h4>Not an array </h4>;\n    }\n    return (\n      <div className=\"card-array\">\n        {generateElementComponentsFromSchemas({\n          schemaData: { properties: { Item: newDataProps.items } },\n          uiSchemaData: { Item: newUiProps.items },\n          onChange: (schema, uischema) => {\n            onChange({\n              ...parameters,\n              items: schema.properties.Item,\n              'ui:*items': uischema.Item || {},\n            });\n          },\n          path: typeof parameters.path === 'string' ? parameters.path : 'array',\n          definitionData:\n            typeof definitionData === 'string' ? definitionData : {},\n          definitionUi: typeof definitionUi === 'string' ? definitionUi : {},\n          hideKey: true,\n          cardOpenArray: [cardOpen],\n          setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n          allFormInputs,\n          mods,\n          categoryHash: generateCategoryHash(allFormInputs),\n          Card,\n          Section,\n        })}\n      </div>\n    );\n  };\n}\n\nconst defaultFormInputs = ({\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n}: { [string]: FormInput });\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: InnerCardWrapper({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: InnerCardWrapper({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","// @flow\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport type { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS = ({\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n}: { [string]: FormInput });\n\nexport default DEFAULT_FORM_INPUTS;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& i': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& li': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'var(--gray)',\n      '& div::before': { backgroundColor: 'var(--light-gray)' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'var(--light-gray)' },\n      '& input:focus': {\n        backgroundColor: 'var(--light-gray)',\n        border: '1px solid var(--gray)',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    'flex-direction': 'column',\n    '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container': {\n      width: '70%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      '& .toggle-collapse': { margin: '0.25em 0.5em 0 0.5em !important' },\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n      '& .arrows': {\n        textAlign: 'right',\n        cssFloat: 'right',\n        '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n        '& .fa': {\n          borderRadius: '4px',\n          padding: '0.25em',\n          margin: '0 0.5em 0 0',\n        },\n      },\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n    '& .section-container': {\n      width: '90%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      '& .toggle-collapse': { margin: '0.25em 0.5em 0 0.5em !important' },\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n      '& .arrows': {\n        textAlign: 'right',\n        cssFloat: 'right',\n        '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n        '& .fa': {\n          borderRadius: '4px',\n          padding: '0.25em',\n          margin: '0 0.5em 0 0',\n        },\n      },\n    },\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n    '& .section-dependent': { border: '1px dashed var(--gray)' },\n    '& .section-requirements': { border: '1px dashed black' },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& i': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onChange,\n  lang,\n  mods,\n  className,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  lang: string,\n  mods?: Mods,\n  className?: string,\n}) {\n  const classes = useStyles();\n  const schemaData = (parse(schema, lang): { [string]: any }) || {};\n  schemaData.type = 'object';\n  const uiSchemaData = (parse(uischema, lang): { [string]: any }) || {};\n  const allFormInputs = {\n    ...DEFAULT_FORM_INPUTS,\n    ...(mods && mods.customFormInputs),\n  };\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color=\"warning\"\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      <div className={classes.formHead}>\n        <div>\n          <h5>Form Name</h5>\n          <Input\n            value={schemaData.title || ''}\n            placeholder=\"Title\"\n            type=\"text\"\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              onChange(\n                stringify(\n                  {\n                    ...schemaData,\n                    title: ev.target.value,\n                  },\n                  lang\n                ),\n                uischema\n              );\n            }}\n            className=\"form-title\"\n          />\n        </div>\n        <div>\n          <h5>Form Description</h5>\n          <Input\n            value={schemaData.description || ''}\n            placeholder=\"Description\"\n            type=\"text\"\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n              onChange(\n                stringify(\n                  {\n                    ...schemaData,\n                    description: ev.target.value,\n                  },\n                  lang\n                ),\n                uischema\n              )\n            }\n            className=\"form-description\"\n          />\n        </div>\n      </div>\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(\n                  stringify(newSchema, lang),\n                  stringify(newUiSchema, lang)\n                ),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n          className=\"form-body\"\n        >\n          <Droppable droppableId=\"droppable\">\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(\n                      stringify(newSchema, lang),\n                      stringify(newUiSchema, lang)\n                    ),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        <Add\n          name={`form-builder`}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(\n                    stringify(newSchema, lang),\n                    stringify(newUiSchema, lang)\n                  ),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(\n                    stringify(newSchema, lang),\n                    stringify(newUiSchema, lang)\n                  ),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            schemaData.properties &&\n            Object.keys(schemaData.properties).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: {\n  definitionSchema: { [string]: any },\n  definitionUiSchema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}) {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n  const allFormInputs = {\n    ...DEFAULT_FORM_INPUTS,\n    ...(mods && mods.customFormInputs),\n  };\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className=\"form_gallery_container\"\n    >\n      {element}\n    </div>\n  ));\n\n  return (\n    <div className=\"form_gallery\">\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className=\"form_footer\">\n        <Add\n          name={`form_gallery`}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            !!definitionSchema && Object.keys(definitionSchema).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    'flex-direction': 'column',\n    'text-align': 'center',\n    '& i': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& i': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n  },\n});\n\nexport default function PreDefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  lang,\n  mods,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  lang: string,\n  mods?: Mods,\n}) {\n  const classes = useStyles();\n  const schemaData = (parse(schema, lang): { [string]: any }) || {};\n  const uiSchemaData = (parse(uischema, lang): { [string]: any }) || {};\n  const allFormInputs = {\n    ...DEFAULT_FORM_INPUTS,\n    ...(mods && mods.customFormInputs),\n  };\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name, schemaObject) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n\n      onChange(stringify(schemaData, lang), stringify(uiSchemaData, lang));\n    }\n  }, [uischema, schema]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions}\n        definitionUiSchema={uiSchemaData.definitions}\n        language={lang}\n        onChange={(\n          newDefinitions: { [string]: any },\n          newDefinitionsUi: { [string]: any }\n        ) => {\n          schemaData.definitions = newDefinitions;\n          uiSchemaData.definitions = newDefinitionsUi;\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            schemaData,\n            uiSchemaData,\n            (newSchema, newUiSchema) =>\n              onChange(\n                stringify(newSchema, lang),\n                stringify(newUiSchema, lang)\n              ),\n            categoryHash\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n","// @flow\n\nimport React from \"react\";\nimport {\n  Alert,\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport { safeLoad as yamlParse, safeDump as yamlStringify } from \"js-yaml\";\n//import Form from \"react-jsonschema-form\";\nimport Form from \"@rjsf/material-ui\";\n//import Form from \"@rjsf/bootstrap-4\";\nimport Tabs from \"./tabs/Tabs\";\nimport YamlEditor from \"./yamlEditor/YamlEditor\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport FormBuilder from \"./formBuilder/FormBuilder\";\nimport PreDefinedGallery from \"./formBuilder/PreDefinedGallery\";\n\ntype Props = {\n  lang: string,\n  schema: string,\n  uischema: string,\n  onChange?: (schema: string, uischema: string) => void,\n  schemaTitle?: string,\n  uischemaTitle?: string,\n  width?: string,\n  height?: string,\n};\n\ntype State = {\n  formData: any,\n  formToggle: boolean,\n  outputToggle: boolean,\n  schemaFormErrorFlag: string,\n  validFormInput: boolean,\n  submissionData: any,\n};\n\n// parse in either YAML or JSON\nfunction parseForJsonSchemaForm(text: string, language: string) {\n  if (!text || text === \"null\") return {};\n  return language === \"yaml\" ? yamlParse(text) : JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nfunction stringify(obj: any, language: string) {\n  if (!obj) return \"\";\n  return language === \"yaml\"\n    ? yamlStringify(obj, { skipInvalid: true })\n    : JSON.stringify(obj, null, 5);\n}\n\n// return error message for parsing or blank if no error\nfunction checkError(text: string, language: string) {\n  let data;\n  try {\n    data = parseForJsonSchemaForm(text, language);\n  } catch (e) {\n    return e.toString();\n  }\n  if (typeof data === \"string\") {\n    return \"Received a string instead of object.\";\n  }\n  return \"\";\n}\n\n// generalized editor, either json or yaml\nconst LangEditor = (parameters: {\n  name: string,\n  onChange: (string) => any,\n  lang: string,\n  value: string,\n  readOnly?: boolean,\n}) => {\n  return (\n    <YamlEditor\n      name={parameters.name}\n      width={\"400px\"}\n      height={\"400px\"}\n      onChange={parameters.onChange}\n      yaml={parameters.value}\n      readOnly={parameters.readOnly}\n    />\n  );\n};\n\nclass JsonSchemaFormEditor extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    // assign initial values\n    this.state = {\n      formData: {},\n      formToggle: true,\n      outputToggle: false,\n      schemaFormErrorFlag: \"\",\n      validFormInput: false,\n      editorWidth: 700,\n      submissionData: {},\n    };\n  }\n\n  // update state schema and indicate parsing errors\n  updateSchema(text: string) {\n    // update parent\n    if (this.props.onChange) this.props.onChange(text, this.props.uischema);\n  }\n\n  // update state ui schema and indicate parsing errors\n  updateUISchema(text: string) {\n    // update parent\n    if (this.props.onChange) this.props.onChange(this.props.schema, text);\n  }\n\n  // update the internal form data state\n  updateFormData(text: string) {\n    try {\n      const data = parseForJsonSchemaForm(text, this.props.lang);\n      this.setState({\n        formData: data,\n        schemaFormErrorFlag: \"\",\n      });\n    } catch (err) {\n      this.setState({\n        schemaFormErrorFlag: err.toString(),\n      });\n    }\n  }\n\n  render() {\n    const schemaError = checkError(this.props.schema, this.props.lang);\n    const schemaUiError = checkError(this.props.uischema, this.props.lang);\n    return (\n      <div\n        style={{\n          width: this.props.width ? this.props.width : \"100%\",\n          height: this.props.height ? this.props.height : \"500px\",\n        }}\n        className=\"playground-main\"\n      >\n        <Alert\n          style={{\n            display: schemaError === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>Schema:</h5> {schemaError}\n        </Alert>\n        <Alert\n          style={{\n            display: schemaUiError === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>UI Schema:</h5> {schemaUiError}\n        </Alert>\n        <Alert\n          style={{\n            display: this.state.schemaFormErrorFlag === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>Form:</h5> {this.state.schemaFormErrorFlag}\n        </Alert>\n        <Tabs\n          tabs={[\n            {\n              name: \"Visual Form Builder\",\n              id: \"form-builder\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary onErr={() => {}}>\n                    <FormBuilder\n                      schema={this.props.schema}\n                      uischema={this.props.uischema}\n                      onChange={(newSchema: string, newUiSchema: string) => {\n                        if (this.props.onChange)\n                          this.props.onChange(newSchema, newUiSchema);\n                      }}\n                      lang={this.props.lang}\n                    />\n                  </ErrorBoundary>\n                </div>\n              ),\n            },\n            {\n              name: \"Preview Form\",\n              id: \"preview-form\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary\n                    onErr={(err: string) => {\n                      this.setState({\n                        schemaFormErrorFlag: err,\n                      });\n                    }}\n                    errMessage=\"Error parsing JSON Schema\"\n                  >\n                    <Form\n                      schema={\n                        schemaError === \"\"\n                          ? parseForJsonSchemaForm(\n                              this.props.schema,\n                              this.props.lang\n                            )\n                          : {}\n                      }\n                      uiSchema={\n                        schemaUiError === \"\"\n                          ? parseForJsonSchemaForm(\n                              this.props.uischema,\n                              this.props.lang\n                            )\n                          : {}\n                      }\n                      onChange={(formData) =>\n                        this.updateFormData(JSON.stringify(formData.formData))\n                      }\n                      formData={this.state.formData}\n                      submitButtonMessage={\"Submit\"}\n                      onSubmit={(submissionData) => {\n                        // below only runs if validation succeeded\n                        this.setState({\n                          validFormInput: true,\n                          outputToggle: true,\n                          submissionData,\n                        });\n                      }}\n                    />\n                  </ErrorBoundary>\n                  <Modal isOpen={this.state.outputToggle}>\n                    <ModalHeader>Form output preview</ModalHeader>\n                    <ModalBody>\n                      <div className=\"editor-container\">\n                        <ErrorBoundary\n                          onErr={() => {}}\n                          errMessage={\"Error parsing JSON Schema Form output\"}\n                        >\n                          {LangEditor({\n                            name: \"Output Data\",\n                            onChange: () => {},\n                            lang: this.props.lang,\n                            value: stringify(this.state.submissionData, \"json\"),\n                            readOnly: true,\n                          })}\n                        </ErrorBoundary>\n                        <br />\n                      </div>\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button\n                        onClick={() => {\n                          this.setState({\n                            outputToggle: false,\n                          });\n                        }}\n                        color=\"secondary\"\n                      >\n                        Close\n                      </Button>\n                    </ModalFooter>\n                  </Modal>\n                </div>\n              ),\n            },\n            {\n              name: \"Edit Schema\",\n              id: \"editors\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                    display: \"flex\",\n                    \"flex-direction\": \"row\",\n                  }}\n                >\n                  <div style={{ margin: \"1em\" }} className=\"editor-container\">\n                    <ErrorBoundary\n                      onErr={(err: string) => {\n                        // if rendering initial value causes a crash\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                        this.updateSchema(\"{}\");\n                      }}\n                      errMessage={\"Error parsing JSON Schema input\"}\n                    >\n                      {LangEditor({\n                        name: \"Data Schema\",\n                        onChange: (data: any) => this.updateSchema(data),\n                        lang: this.props.lang,\n                        value: this.props.schema,\n                      })}\n                    </ErrorBoundary>\n                    <br />\n                  </div>\n                  <div style={{ margin: \"1em\" }} className=\"editor-container\">\n                    <ErrorBoundary\n                      onErr={(err: string) => {\n                        // if rendering initial value causes a crash\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                        this.updateUISchema(\"{}\");\n                      }}\n                      errMessage={\"Error parsing JSON UI Schema input\"}\n                    >\n                      {LangEditor({\n                        name: \"UI Schema\",\n                        onChange: (data: any) => this.updateUISchema(data),\n                        lang: this.props.lang,\n                        value: this.props.uischema,\n                      })}\n                    </ErrorBoundary>\n                  </div>\n                </div>\n              ),\n            },\n            {\n              name: \"Pre-Configured Components\",\n              id: \"pre-configured\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary onErr={() => {}}>\n                    <PreDefinedGallery\n                      schema={this.props.schema}\n                      uischema={this.props.uischema}\n                      onChange={(newSchema: string, newUiSchema: string) => {\n                        if (this.props.onChange)\n                          this.props.onChange(newSchema, newUiSchema);\n                      }}\n                      lang={this.props.lang}\n                    />\n                  </ErrorBoundary>\n                </div>\n              ),\n            },\n          ]}\n          preventRerender\n        />\n      </div>\n    );\n  }\n}\n\nexport default JsonSchemaFormEditor;\n","// @flow\n\nimport React from \"react\";\n\nimport JsonSchemaFormEditor from \"./JsonSchemaFormEditor\";\n\ntype Props = {\n  title: string,\n};\n\ntype State = {\n  schema: string,\n  uischema: string,\n};\n\nclass PlaygroundContainer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      schema: ``,\n      uischema: ``,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"service-playground\">\n        <div className=\"playground-info\">\n          <h1>{this.props.title}</h1>\n        </div>\n        <JsonSchemaFormEditor\n          lang={\"yaml\"}\n          schema={this.state.schema}\n          uischema={this.state.uischema}\n          schemaTitle=\"Data Schema\"\n          uischemaTitle=\"UI Schema\"\n          onChange={(newSchema: string, newUiSchema: string) => {\n            // could do operations with this\n            this.setState({\n              schema: newSchema,\n              uischema: newUiSchema,\n            });\n          }}\n          width=\"95%\"\n          height=\"800px\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlaygroundContainer;\n","import React from \"react\";\nimport PlaygroundContainer from \"./PlaygroundContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <body>\n        <PlaygroundContainer title=\"Form Builder Demo\" />\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <head>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.11.2/css/all.css\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.11.2/css/v4-shims.css\"\n      />\n    </head>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}